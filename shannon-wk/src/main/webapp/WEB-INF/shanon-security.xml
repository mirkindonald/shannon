<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
 
		<intercept-url pattern="/settings" access="hasRole('ADMIN_USER')" />
 
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
 
		<form-login 
		    login-page="/login" 
		    default-target-url="/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout
            invalidate-session="true"
            delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
            logout-success-url="/login?logout"></logout>
		<!-- enable csrf protection
		<csrf/> -->
	</http>
	<!-- Select users and user_roles from database -->
	<authentication-manager alias="authenticationManager">
    	<authentication-provider ref="restAuthenticationProvider" />
	</authentication-manager>
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username, password, true from test.user where username=?"
		  authorities-by-username-query=
		    "select username,role from test.user u where username =?  " />
	  </authentication-provider>
	</authentication-manager>
</beans:beans>